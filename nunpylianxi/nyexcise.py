#平均增长系数法
import numpy as np
x = (17,7,4),(7,38,6),(4,5,17)
a1=np.array(x,dtype=float)
print("原始数组：")
print(a1)
print("\n")
print("计算每列的和并入原始数组")
a2=np.array(np.append(a1,np.sum(a1,axis=0)))
a3=a2.reshape(4,3)
#print(a3)
print("\n")
print("计算每行的和也并入原来数组")
a4=np.sum(a3,axis=1)
#print(a4)
a5=a4.reshape(4,1)
#print(a5)
print("\n")
print("第一个原始大数组")
print(np.append(a3,a5,axis=1))
print("\n")
print("题中给出的数据：")
y=[38.6,91.9,36],[39.3,90.3,36.9]
b=np.array(y,dtype=float)
print(b)
print("\n")
print("发生交通量之和和吸引交通量之和")
z=[28,51,26],[28,50,27]
c=np.array(z,dtype=float)
print(c)
print("\n")
print("两个数组相除(发生交通量增长系数，吸引交通量增长系数）")
d=b/c#np.divide(b,c)
print(d)
print("\n")
print("收敛判定：")
print([d<0.97]and[d>1.03])
print("\n")
#为求第一次近似做准备
p1=np.array([1.37857143,1.80196078,1.38461538])
p2=np.broadcast_to(p1,(3,3))
p3=p2.T
#print(p3)
p4=np.array([1.40357143,1.806,1.36666667])
p5=np.broadcast_to(p4,(3,3))
#print(p5)
p6=(p3+p5)/2
#print(p6)
#print("\n")
print("第一次迭代计算表")
p7=np.multiply(a1,p6)
print(p7)
print("\n")
print("将迭代计算表每行每列累加：")
p8=np.array(np.append(p7,np.sum(p7,axis=0)))
t1=np.sum(p7,axis=0)
#print(t1)
p9=p8.reshape(4,3)
#print(p9)
p10=np.sum(p9,axis=1)
#print(p10)
p11=p10.reshape(4,1)
print("\n")
print("总表：")
print(np.append(p9,p11,axis=1))
print("\n")
print("再次将两个数组相除(发生交通量增长系数，吸引交通量增长系数）:")
t2=np.sum(p7,axis=1)
p12=np.concatenate((t2,t1))
#print(p12)
p13=p12.reshape(2,3)
#print(p13)
p14=b/p13
print(p14)
print("\n")
print("收敛判定：")
print([p14>1.03]and[p14<0.97])
print("经检验，有不合格数字，所以进行第二次迭代")
k18=np.array([0.95818038,0.95818038,0.95818038])
k19=np.array([0.97171516,1.0299543 ,0.96138174])
k20=k18+k19
k21=np.array([1.02938623,1.02938623,1.02938623])
k22=k21+k19
k23=np.array([0.97458474,0.97458474,0.97458474])
k24=k23+k19
k25=np.vstack((k20/2,k22/2,k24/2))
print("\n")
print("第二次近似：")
print(k25)
print("\n")
print("第二次迭代计算表")
k26=np.multiply(p7,k25)
print(k26)
print("\n")
print("第二次累加：")
k27=np.asarray(np.append(k26,np.sum(k26,axis=0)))
t3=np.sum(k26,axis=0)
#print(t3)
k28=k27.reshape(4,3)
#print(k28)
k29=np.sum(k28,axis=1)
#print(k29)
k30=k29.reshape(4,1)
print("\n")
print("总表：")
print(np.append(k28,k30,axis=1))
print("\n")
print("两个数组相除(发生交通量增长系数，吸引交通量增长系数）:")
t4=np.sum(k26,axis=1)
k31=np.concatenate((t4,t3))
k32=k31.reshape(2,3)
#print(k32)
k33=b/k32
print(k33)
k34=k33-1
#print(k34)
print("\n")
print("收敛判定：")
print([k34>0.03]and[k34<-0.03])
print("没有不合格数字所以迭代结束")
print("\n")
print("最终结果：")
print(np.append(k28,k30,axis=1))
